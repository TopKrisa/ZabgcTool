<Window x:Class="ZabgcTool_SDK_.HtmlRedactor.EditRedactor"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ZabgcTool_SDK_.HtmlRedactor" xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
        xmlns:WpfHtmlEditor="clr-namespace:SpiceLogic.WpfHtmlEditor;assembly=SpiceLogicWPFHtmlEditor"
        mc:Ignorable="d"
        Title="Redactor" Height="450" Width="800" WindowStartupLocation="CenterScreen" ResizeMode="NoResize" WindowStyle="None" WindowState="Maximized">
    <Window.Resources>
        <ControlTemplate x:Key="ButtonBaseControlTemplate1" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="TopMenuButtons" TargetType="Button">
            <Grid Name="btn" Height="40" Margin="20 0 0 0" >
                <Border>
                    <Grid>
                        <Label Content="{TemplateBinding Content}" Background="Transparent" FontSize="{TemplateBinding FontSize}" VerticalAlignment="Center">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Foreground" Value="#FF9D9999"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=btn}" Value="True">
                                            <Setter Property="Foreground" Value="White"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsPressed, ElementName=btn}" Value="true">
                                            <Setter Property="Foreground" Value="#FF9D9999"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                            Path = IsFocused}" Value="true">
                                            <Setter Property="Foreground" Value="white"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                    </Grid>

                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                            Path = IsPressed}" Value="true">
                                    <Setter Property="Margin" Value="0 2 0 0"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
                <Label Name="xax" Content="{TemplateBinding Content}" Margin="-3 0 0 0"
                           Background="Transparent" VerticalAlignment="Center" 
                           FontSize="23" FontWeight="Bold">
                    <Label.Style>
                        <Style TargetType="Label">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                            Path = IsFocused}" Value="true">
                                    <DataTrigger.Setters>
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <BlurEffect Radius="25"/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger.Setters>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </Grid>
        </ControlTemplate>
        <ContextMenu x:Key="ContextMenuCustom">
            <MenuItem x:Name="contextMenuItem_imageProperties" Header="Image Properties" Click="contextMenuItem_imageProperties_Click">
                <MenuItem.Icon>
                    <Image Source="Resources/picture2.png"></Image>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem x:Name="contextMenuItem_linkProperties" Header="Link Properties" Click="contextMenuItem_linkProperties_Click">
                <MenuItem.Icon>
                    <Image Source="Resources/hyperlink.gif"></Image>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem x:Name="contextMenuItem_cellProperties" Header="Cell Properties" Click="contextMenuItem_cellProperties_Click">
                <MenuItem.Icon>
                    <Image Source="Resources/tableCell.png"></Image>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem x:Name="contextMenuItem_tableProperties" Header="Table">
                <MenuItem.Icon>
                    <Image Source="Resources/tableInGeneral.png"></Image>
                </MenuItem.Icon>
                <MenuItem Header="Table Properties" Click="tablePropertiesToolStripMenuItem_Click">
                    <MenuItem.Icon>
                        <Image Source="Resources/table.gif"></Image>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Insert Row (Before)" Click="insertRowBeforeToolStripMenuItem_Click">
                    <MenuItem.Icon>
                        <Image Source="/Resources/tblInsertRow.png"></Image>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Insert Row (After)" Click="insertRowAfterToolStripMenuItem_Click">
                    <MenuItem.Icon>
                        <Image Source="Resources/tblInsertRow.png"></Image>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Delete Row" Click="deleteRowToolStripMenuItem_Click">
                    <MenuItem.Icon>
                        <Image Source="Resources/tblDeleteRow.png"></Image>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Insert Column (Before)" Click="insertColumnBeforeToolStripMenuItem_Click">
                    <MenuItem.Icon>
                        <Image Source="Resources/tblInsertColumn.png"></Image>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Insert Column (After)" Click="insertColumnAfterToolStripMenuItem_Click">
                    <MenuItem.Icon>
                        <Image Source="Resources/tblInsertColumn.png"></Image>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Delete Column" Click="deleteColumnToolStripMenuItem_Click">
                    <MenuItem.Icon>
                        <Image Source="Resources/tblDeleteColumn.png"></Image>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="mergeCellsToolStripMenuItem" Header="Merge Cells" Click="mergeCellsToolStripMenuItem_Click">
                    <MenuItem.Icon>
                        <Image Source="Resources/mergeCell.png"></Image>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem x:Name="youTubeVideoPropertiesToolStripMenuItem" Header="YouTube Video Properties" Click="youTubeVideoPropertiesToolStripMenuItem_Click">
                <MenuItem.Icon>
                    <Image Source="Resources/youTube.png"></Image>
                </MenuItem.Icon>
            </MenuItem>
            <Separator x:Name="toolStripSeparator1Context"></Separator>
            <MenuItem Header="Alignment">
                <MenuItem Header="Left" Click="contextMenuItem_align_left_Click">
                    <MenuItem.Icon>
                        <Image Source="Resources/align_left.gif"></Image>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Center" Click="contextMenuItem_align_center_Click">
                    <MenuItem.Icon>
                        <Image Source="Resources/align_center.gif"></Image>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Right" Click="contextMenuItem_align_right_Click">
                    <MenuItem.Icon>
                        <Image Source="Resources/align_right.gif"></Image>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Remove Alignment" Click="contextMenuItem_align_remove_Click">
                    <MenuItem.Icon>
                        <Image Source="Resources/removeAlign.png"></Image>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <Separator></Separator>
            <MenuItem x:Name="contextMenuItem_cut" Header="Custom Cut" Click="contextMenuItem_cut_Click">
                <MenuItem.Icon>
                    <Image Source="Resources/btnCut.png"></Image>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem x:Name="contextMenuItem_copy" Header="Custom Copy" Click="contextMenuItem_copy_Click">
                <MenuItem.Icon>
                    <Image Source="Resources/btnCopy.png"></Image>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Custom Paste" Click="contextMenuItem_paste_Click">
                <MenuItem.Icon>
                    <Image Source="Resources/btnPaste.png"></Image>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem x:Name="contextMenuItem_delete" Header="Delete" Click="contextMenuItem_delete_Click">
                <MenuItem.Icon>
                    <Image Source="Resources/Delete.png"></Image>
                </MenuItem.Icon>
            </MenuItem>
            <Separator></Separator>
            <MenuItem Header="Select All" Click="contextMenuItem_selectAll_Click">
                <MenuItem.Icon>
                    <Image Source="Resources/selectAll.png"></Image>
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
        <Style x:Key="TBs" TargetType="TextBox">

            <Setter Property="Background" Value="#1E1E1E"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderBrush" Value="#FF2D333D"/>
            <Setter Property="Padding" Value="10 0 0 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid x:Name="root" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" SnapsToDevicePixels="True">
                            <Border x:Name="Back" BorderThickness="1" CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"/>
                            <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Padding="{TemplateBinding Padding}" IsTabStop="False" Background="{x:Null}" TextElement.Foreground="{TemplateBinding Foreground}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#FF383C44"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#FF1D578C"/>
                                <Setter Property="Background" Value="#FF0E1116"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="35"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <Grid Background="#1E1E1E" Visibility="Collapsed"  Name="Textbox" Grid.Row="1" Height="110" VerticalAlignment="Top" Panel.ZIndex="999">
            <TextBox x:Name="Name" Grid.Row="2" Style="{StaticResource TBs}" Margin="25 10 25 0" VerticalAlignment="Top"/>
            <TextBlock IsHitTestVisible="False" FontSize="14"  Text="Name of news" Grid.Row="2" Margin="37 18 0 0" Foreground="#FF535559">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Text, ElementName=Name}" Value="">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>

                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <Button Template="{StaticResource TopMenuButtons}" Content="Сохранить" Name="SaveName" HorizontalAlignment="Right" VerticalAlignment="Bottom" FontSize="20"/>
        </Grid>
        <WpfHtmlEditor:WpfHtmlEditor x:Name="WpfHtmlEditor" Grid.Row="1" ContextMenuShowing="WpfHtmlEditor_OnContextMenuShowing"/>
        <StackPanel Grid.Row="2" Orientation="Horizontal"  Background="#1E1E1E">
            <Button Template="{StaticResource TopMenuButtons}" FontSize="20" Content="Preview image"/>
            <Button Template="{StaticResource TopMenuButtons}" FontSize="20" Content="Name" Name="NameData"/>
            <Button Template="{StaticResource TopMenuButtons}" FontSize="20" Content="Save" Name="Edit" />
        </StackPanel>
        <Grid MouseLeftButtonDown="Grid_MouseLeftButtonDown" Grid.Row="0" Background="#1E1E1E">
            <TextBlock Text="Editor" Foreground="#FF9D9999" FontSize="20" VerticalAlignment="Center" Margin="15 0 0 0" />
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Name="butns" Template="{DynamicResource ButtonBaseControlTemplate1}" Click="butns_Click" Width="35" >
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Margin" Value="30 5 0 0"/>
                            <Setter Property="Content" Value="{materialDesign:PackIcon WindowMinimize, Size=15}"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Foreground" Value="#FF9D9999"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver,ElementName=butns}" Value="true">
                                    <Setter Property="Foreground" Value="White"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Name="butn" Template="{DynamicResource ButtonBaseControlTemplate1}" Click="butn_Click" Width="25" Margin="0" Height="38" VerticalAlignment="Top" >
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Content" Value="{materialDesign:PackIcon Close, Size=20}"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Foreground" Value="#FF9D9999"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver,ElementName=butn}" Value="true">
                                    <Setter Property="Foreground" Value="White"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
