<Window x:Class="ZabgcTool_SDK_.View.Login"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ZabgcTool_SDK_.View"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        Title="Авторизация" Height="420" Width="365" WindowStyle="None" WindowStartupLocation="CenterScreen" ResizeMode="NoResize">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <!--                  buttonstyle                                                 -->
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--                                                                   -->

        <Style x:Key="TBs" TargetType="TextBox">

            <Setter Property="Background" Value="#FF11141A"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderBrush" Value="#FF2D333D"/>
            <Setter Property="Padding" Value="10 0 0 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid x:Name="root" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" SnapsToDevicePixels="True">
                            <Border x:Name="Back" BorderThickness="1" CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"/>
                            <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Padding="{TemplateBinding Padding}" IsTabStop="False" Background="{x:Null}" TextElement.Foreground="{TemplateBinding Foreground}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#FF383C44"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#FF1D578C"/>
                                <Setter Property="Background" Value="#FF0E1116"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PBs" TargetType="PasswordBox">
            <Setter Property="Background" Value="#FF11141A"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderBrush" Value="#FF2D333D"/>
            <Setter Property="Padding" Value="10 0 0 0"/>
            <EventSetter Event="PasswordChanged" Handler="OnPasswordChanged"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Grid x:Name="root" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" SnapsToDevicePixels="True">
                            <Border x:Name="Back" BorderThickness="1" CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"/>
                            <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Padding="{TemplateBinding Padding}" IsTabStop="False" Background="{x:Null}" TextElement.Foreground="{TemplateBinding Foreground}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#FF383C44"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#FF1D578C"/>
                                <Setter Property="Background" Value="#FF0E1116"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ButtonBaseControlTemplate1" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>

    <Window.Background>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF232D3E" Offset="0"/>
            <GradientStop Color="#FF1D222C" Offset="1"/>
            <GradientStop Color="#FF1D222C" Offset="0.50"/>
        </LinearGradientBrush>
    </Window.Background>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="110"/>
            <RowDefinition Height="300"/>
        </Grid.RowDefinitions>
        <Grid  Name="ToolBars" Grid.Row="0" Background="Transparent" MouseDown="ToolBars_MouseDown">
            <Polygon Fill="White" Opacity="0.2" Points="107,0,
                 115,7
                 249,7
                 257,0"/>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 4 7 0">
                <Button Name="butns" Template="{DynamicResource ButtonBaseControlTemplate1}" Click="MinimizeButton_Click" Width="35" >
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Margin" Value="30 5 0 0"/>
                            <Setter Property="Content" Value="{materialDesign:PackIcon WindowMinimize, Size=15}"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Foreground" Value="#FF9D9999"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver,ElementName=butns}" Value="true">
                                    <Setter Property="Foreground" Value="White"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Command="{Binding OpenWindowCommand}" Name="butn" Template="{DynamicResource ButtonBaseControlTemplate1}" Click="CloseButton_Click" Width="25" Margin="0" >
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Content" Value="{materialDesign:PackIcon Close, Size=20}"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Foreground" Value="#FF9D9999"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver,ElementName=butn}" Value="true">
                                    <Setter Property="Foreground" Value="White"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="1">

            <TextBlock Foreground="Gray" FontWeight="Bold" FontSize="50" HorizontalAlignment="Center" VerticalAlignment="Center">
                ZABGC
            </TextBlock>
            <TextBlock Foreground="Gray" FontWeight="Bold" FontSize="14" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0 55 100 0">
               Tools
            </TextBlock>
            <Polygon Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Bottom" Stroke="#FF555860" Points="0 0 330 0" Margin="80 0 80 15"/>
        </Grid>

        <TextBox x:Name="Logins" Grid.Row="2" Style="{StaticResource TBs}" Margin="25 45 25 0" VerticalAlignment="Top" KeyDown="Password_KeyDown"/>
        <TextBlock IsHitTestVisible="False" FontSize="14"  Text="Логин" Grid.Row="2" Margin="37 53 0 0" Foreground="#FF535559">
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Text, ElementName=Logins}" Value="">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>

                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <PasswordBox x:Name="Password" Grid.Row="2" Style="{StaticResource PBs}" Margin="25 95 25 0" VerticalAlignment="Top" KeyDown="Password_KeyDown"/>
        <TextBlock Name="textpass" IsHitTestVisible="False" FontSize="14" Text="Пароль" Grid.Row="2" Margin="37 103 0 0" Foreground="#FF535559">

        </TextBlock>
        <ToggleButton Name="TGB" Grid.Row="2" Height="30" Width="145" HorizontalAlignment="Left" VerticalAlignment="Top"
                      Foreground="#FFACB3BF"
                      FontSize="14"
                      Margin="25 145 0 0" Content="Оставаться в сети"
                      KeyDown="Password_KeyDown">
            <ToggleButton.Template>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <StackPanel Orientation="Horizontal">
                        <Border  Height="20" Width="20" CornerRadius="2" BorderThickness="1" Background="Black" HorizontalAlignment="Left">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="BorderBrush" Value="#FF333842"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="BorderBrush" Value="#FF51555C"/>
                                        </Trigger>
                                        <EventTrigger RoutedEvent="PreviewMouseDown">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Duration="0:0:0.100" To="#FF333842"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="PreviewMouseUp">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color"
                                                                Duration="0:0:0.100" To="#FF51555C"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Image Margin="4">
                                <Image.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                                                <Setter Property="Image.Source" Value="Icons\pngwing.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </Border>
                        <ContentPresenter Margin="10 0 0 0" Content="{TemplateBinding Content}"
                                          VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </StackPanel>
                </ControlTemplate>
            </ToggleButton.Template>
        </ToggleButton>
        <Border Name="ButtonBorder" Grid.Row="2" Height="35" Margin="25 105 25 0" BorderThickness="1" Background="#FF00AEFF">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="BorderBrush" Value="#FF0E86CA"/>
                    <Style.Triggers>
                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Duration="0:0:0.0002" To="#FF095386"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="PreviewMouseUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Duration="0:0:0.100" To="#FF0E86CA"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>


            <Button Content="Авторизоваться" FontSize="16" Foreground="White" Click="Button_Click">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                        <Setter Property="Background" Value="#FF0E86CA"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Name="border"  BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>

                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#FF00AEFF"/>
                                        </Trigger>
                                        <EventTrigger RoutedEvent="PreviewMouseDown">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>

                                                        <ThicknessAnimation Storyboard.TargetProperty="Margin"
                                                                Duration="0:0:0.10" To=" 2 2 0 0 "/>
                                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#FF095386" Duration="0:0:0.0002"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>

                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="PreviewMouseUp">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ThicknessAnimation Storyboard.TargetProperty="Margin"
                                                                Duration="0:0:0.100" To="0"/>
                                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#FF0E86CA" Duration="0:0:0.0002"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                    </Style>
                </Button.Style>

            </Button>

        </Border>
        <Polygon Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Bottom" Stroke="#FF555860" Points="0 0 330 0" Margin="25 0 25 60"/>
        <TextBlock x:Name="WrongDataText" Grid.Row="2"
                   VerticalAlignment="Bottom"
                   HorizontalAlignment="Center" Foreground="#ad1414"
                   Margin="0 0 0 45" FontWeight="Bold" Visibility="Collapsed">
            Логин или Пароль не верный
        </TextBlock>
        <TextBlock Grid.Row="2" FontSize="9" VerticalAlignment="Bottom" HorizontalAlignment="Right" Foreground="#5c5c5c" Margin="0 0 5 20"> 
            Version 1.0.13
        </TextBlock>
    </Grid>
</Window>